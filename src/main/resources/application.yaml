spring:
  application:
    name: TravelLocal

  config:
    import: application-secret.yaml

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #url: jdbc:mysql://mysql:3306/${db.name}?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true # docker compose 사용
    url: jdbc:mysql://localhost:3306/${db.name}?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true # 로컬 사용
    username: ${db.username}
    password: ${db.password}

  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  data:
    redis:
      #host: redis # docker compose 사용
      host: localhost # 로컬 사용
      port: 6379
      password: ${redis.password}

  jwt:
    secret: ${jwt.secret}

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${naver.client-id}
            client-secret: ${naver.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - gender
              - birthyear
              - mobile
          google:
            client-name: google
            client-id: ${google.client-id}
            client-secret: ${google.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          kakao:
            client-name: kakao
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

aws:
  access-key: ${aws.access-key}
  secret-key: ${aws.secret-key}
  region: ap-northeast-2
  bucket: ${aws.bucket}
  url: ${aws.url}

server:
  port: 8080

logging:
  level:
    org.springframework.security: DEBUG